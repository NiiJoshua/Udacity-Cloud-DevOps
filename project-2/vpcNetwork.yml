Description: This creates a template for the network for the Udagram web app
Parameters:
  EnvironmentName: 
    Description: This name will be a form of prefix to all networks
    Type: String
    Default: "UdagramWebApp"
  VPCCIDR:
    Description: CIDR for Udagram Vpc app
    Type: String
    Default: "10.0.0.0/16"
  PrivSubnet1CIDR:
    Description: CIDR for Udagram app in first private subnet
    Type: String
    Default: "10.0.2.0/24"
  PrivSubnet2CIDR:
    Description: CIDR for Udagram app in second private subnet
    Type: String
    Default: "10.0.3.0/24"
  PubSubnet1CIDR:
    Description: CIDR for Udagram app in first public subnet
    Type: String
    Default: "10.0.0.0/24"
  PubSubnet2CIDR:
    Description: CIDR for Udagram app in second public subnet
    Type: String
    Default: "10.0.1.0/24"
# Creating the resources. VPC
Resources:
  MainVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
# Creating Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
        - Key: Name
          Value: !Ref EnvironmentName
# Attach the created Gateway to the VPC
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      VpcId: !Ref MainVPC
      InternetGatewayId: !Ref InternetGateway
# Subnets
# First public subnet in AZ1
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PubSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
      VpcId: !Ref MainVPC 
# Second public subnet in AZ2
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PubSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)
      VpcId: !Ref MainVPC 
# First private subnet in AZ1
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name 
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)
      VpcId: !Ref MainVPC 
# Second private subnet in AZ2
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name 
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)
      VpcId: !Ref MainVPC 
# Network Address Translation (NAT) Gateways in both AZs
# Elastic IP for first NAT Gateway
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachInternetGateway
    Properties:
      Domain: vpc
# Elastic IP for second NAT Gateway
  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachInternetGateway
    Properties:
      Domain: vpc
# Gateways to use EIPs above
# NAT Gateway 1
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
# NAT Gateway 2
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2

# Route configuration
# Public route table attached with VPC
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes
      VpcId: !Ref MainVPC
# Rule that directs all traffic to Internet Gateway
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
# Associate public route table with first public subnet
  AssociatePubRT1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
# Associate public route table with second public subnet
  AssociatePubRT2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

# First private route table with VPC
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (AZ1)
      VpcId: !Ref MainVPC
# Rule that directs all internal traffic to first NAT Gateway
  DefaultPrivateRoute1: 
    Type: AWS::EC2::Route
    Properties: 
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
# Associating first private route table with first private subnet
  AssociatePrivRT1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1
# Second private route table with VPC
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (AZ2)
      VpcId: !Ref MainVPC
# Rule that directs all internal traffic to second NAT Gateway
  DefaultPrivateRoute2: 
    Type: AWS::EC2::Route
    Properties: 
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
# Associating seond private route table with second private subnet
  AssociatePrivRT2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2
  
# Ouputs
Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref MainVPC
    Export:
      Name: !Sub ${EnvironmentName}-VPCID

  VPCPublicRouteTable:
    Description: Public Routing to Load Balancer in Public Subnet
    Value: !Ref PublicRouteTable
    Export: 
      Name: !Sub ${EnvironmentName}-PUB-RT

  VPCPrivateRouteTable01:
    Description: Private Routing to PrivateSubnet01
    Value: !Ref PrivateRouteTable1
    Export: 
      Name: !Sub ${EnvironmentName}-PRIV-RT01

  VPCPrivateRouteTable02:
    Description: Private Routing to PrivateSubnet02
    Value: !Ref PrivateRouteTable2
    Export: 
      Name: !Sub ${EnvironmentName}-PRIV-RT02
  # Public subnets
  PublicSubnets:
    Description: A list of public subnets in the project
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export: 
      Name: !Sub ${EnvironmentName}-PUB-NETS

  PublicSubnet01:
    Description: A reference to the public subnet in AZ-1
    Value: !Ref PublicSubnet1
    Export: 
      Name: !Sub ${EnvironmentName}-PUB-SN01

  PublicSubnet02:
    Description: A reference to the public subnet in AZ-2
    Value: !Ref PublicSubnet2
    Export: 
      Name: !Sub ${EnvironmentName}-PUB-SN02
  # Private subnets
  PrivateSubnets:
    Description: A list of private subnets in the project
    Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export: 
      Name: !Sub ${EnvironmentName}-PRIV-NETS

  PrivateSubnet01:
    Description: A reference to the private subnet in AZ-1
    Value: !Ref PrivateSubnet1
    Export: 
      Name: !Sub ${EnvironmentName}-PRIV-SN01

  PrivateSubnet02:
    Description: A reference to the private subnet in AZ-2
    Value: !Ref PrivateSubnet2
    Export: 
      Name: !Sub ${EnvironmentName}-PRIV-SN02